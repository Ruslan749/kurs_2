/*
Количество вложенных вызовов методов называется глубиной рекурсии.
Реализация рекурсивных вызовов опирается на механизм стека вызовов.
Адрес возврата и локальные переменные метода записываются в стек,
благодаря чему каждый следующий рекурсивный вызов этого метода пользуется
своим набором локальных переменных и за счёт этого работает корректно.
На каждый рекурсивный вызов требуется некоторое количество оперативной памяти компьютера,
и рекурсии может наступить переполнение стека. Будет сгенерирована исключительная
ситуация StackOverflowError (переполнение стека).
 */
package recursion;

public class task_3 {
    private static int step = 0;
    public static void main(String[] args) {
        m(1);
    }

    private static void m(int x) {
        space();
        System.out.println("" + x + "-> ");
        step++;
        if ((2 * x + 1) < 20){
            m(2 * x + 1);
        }
        step--;
        space();
        System.out.println("" + x + " <-");
    }

    private static void space() {
        for (int i = 0; i< step; i++){
            System.out.print(" ");
        }
    }
}
